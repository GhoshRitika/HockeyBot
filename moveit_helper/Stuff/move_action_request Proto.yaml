### Action list and [type]
/execute_trajectory [moveit_msgs/action/ExecuteTrajectory]
/move_action [moveit_msgs/action/MoveGroup]
/panda_arm_controller/follow_joint_trajectory [control_msgs/action/FollowJointTrajectory]
/panda_gripper/gripper_action [control_msgs/action/GripperCommand]



### Filled in interface Proto
request:
  workspace_parameters:
    header:
      stamp:
        sec: 0
        nanosec: 0
      frame_id: ''
    min_corner:
      x: 0.0
      y: 0.0
      z: 0.0
    max_corner:
      x: 0.0
      y: 0.0
      z: 0.0
  start_state:
    joint_state:
      header:
        stamp:
          sec: 0
          nanosec: 0
        frame_id: ''
      name: []
      position: [] # Start Positions
      velocity: []
      effort: []
    multi_dof_joint_state:
      header:
        stamp:
          sec: 0
          nanosec: 0
        frame_id: ''
      joint_names: []
      transforms: []
      twist: []
      wrench: []
    attached_collision_objects: []
    is_diff: false
  goal_constraints: []
  path_constraints:
    name: ''
    joint_constraints: []  # End Goal Positions
    position_constraints: []
    orientation_constraints: []
    visibility_constraints: []
  trajectory_constraints:
    constraints: []
  reference_trajectories: []
  pipeline_id: ''
  planner_id: ''
  group_name: ''
  num_planning_attempts: 0
  allowed_planning_time: 0.0
  max_velocity_scaling_factor: 0.0
  max_acceleration_scaling_factor: 0.0
  cartesian_speed_end_effector_link: ''
  max_cartesian_speed: 0.0
planning_options:
  planning_scene_diff:
    name: ''
    robot_state:
      joint_state:
        header:
          stamp:
            sec: 0
            nanosec: 0
          frame_id: ''
        name: []
        position: []
        velocity: []
        effort: []
      multi_dof_joint_state:
        header:
          stamp:
            sec: 0
            nanosec: 0
          frame_id: ''
        joint_names: []
        transforms: []
        twist: []
        wrench: []
      attached_collision_objects: []
      is_diff: false
    robot_model_name: ''
    fixed_frame_transforms: []
    allowed_collision_matrix:
      entry_names: []
      entry_values: []
      default_entry_names: []
      default_entry_values: []
    link_padding: []
    link_scale: []
    object_colors: []
    world:
      collision_objects: []
      octomap:
        header:
          stamp:
            sec: 0
            nanosec: 0
          frame_id: ''
        origin:
          position:
            x: 0.0
            y: 0.0
            z: 0.0
          orientation:
            x: 0.0
            y: 0.0
            z: 0.0
            w: 1.0
        octomap:
          header:
            stamp:
              sec: 0
              nanosec: 0
            frame_id: ''
          binary: false
          id: ''
          resolution: 0.0
          data: []
    is_diff: false
  plan_only: false
  look_around: false
  look_around_attempts: 0
  max_safe_execution_cost: 0.0
  replan: false
  replan_attempts: 0
  replan_delay: 0.0



  plan_request_msg = moveit_msgs.action.MoveGroup.Goal(
            request=moveit_msgs.msg.MotionPlanRequest(
            workspace_parameters=moveit_msgs.msg.WorkspaceParameters(
            header=std_msgs.msg.Header(
            stamp=builtin_interfaces.msg.Time(
            sec=1667668827,
            nanosec=729437629),
            frame_id='panda_link0'),
            min_corner=geometry_msgs.msg.Vector3(
            x=-1.0,
            y=-1.0,
            z=-1.0),
            max_corner=geometry_msgs.msg.Vector3(
            x=1.0,
            y=1.0,
            z=1.0)),
            start_state=moveit_msgs.msg.RobotState(
            joint_state=sensor_msgs.msg.JointState(  ## We can pass objects without decomposing
            header=std_msgs.msg.Header(
            frame_id='panda_link0'),
            name=['panda_joint1',
            'panda_joint2',
            'panda_joint3',
            'panda_joint4',
            'panda_joint5',
            'panda_joint6',
            'panda_joint7',
            'panda_finger_joint1',
            'panda_finger_joint2'],
            position=[-3.05743667552222e-05,
            0.45826129385071196,
            0.36520248871411476,
            -1.8763676740530548,
            -0.21278170570578495,
            2.2968262699790225,
            1.2581421343073955,
            0.035,
            0.035]),
            multi_dof_joint_state=sensor_msgs.msg.MultiDOFJointState(
            header=std_msgs.msg.Header(
            frame_id='panda_link0')),
            is_diff=False),
            goal_constraints=[moveit_msgs.msg.Constraints(
            joint_constraints=[moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint1',
            position=-0.799720847385826,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0),
            moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint2',
            position=0.6631403268111388,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0),
            moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint3',
            position=0.1428222590095236,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0),
            moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint4',
            position=-1.9078958035320892,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0),
            moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint5',
            position=-0.16023113114248438,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0),
            moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint6',
            position=2.5601750273131985,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0),
            moveit_msgs.msg.JointConstraint(
            joint_name='panda_joint7',
            position=0.2327714355052132,
            tolerance_above=0.0001,
            tolerance_below=0.0001,
            weight=1.0)]
            )],
            pipeline_id='move_group',
            group_name='panda_manipulator',
            num_planning_attempts=10,
            allowed_planning_time=5.0,
            max_velocity_scaling_factor=0.1,
            max_acceleration_scaling_factor=0.1),
            planning_options=moveit_msgs.msg.PlanningOptions(
            planning_scene_diff=moveit_msgs.msg.PlanningScene(
            robot_state=moveit_msgs.msg.RobotState(
            is_diff=True),
            is_diff=True),
            plan_only=True))




            



### Interface Proto
request:
  workspace_parameters:
    header:
      stamp:
        sec: 0
        nanosec: 0
      frame_id: ''
    min_corner:
      x: 0.0
      y: 0.0
      z: 0.0
    max_corner:
      x: 0.0
      y: 0.0
      z: 0.0
  start_state:
    joint_state:
      header:
        stamp:
          sec: 0
          nanosec: 0
        frame_id: ''
      name: []
      position: []
      velocity: []
      effort: []
    multi_dof_joint_state:
      header:
        stamp:
          sec: 0
          nanosec: 0
        frame_id: ''
      joint_names: []
      transforms: []
      twist: []
      wrench: []
    attached_collision_objects: []
    is_diff: false
  goal_constraints: []
  path_constraints:
    name: ''
    joint_constraints: []
    position_constraints: []
    orientation_constraints: []
    visibility_constraints: []
  trajectory_constraints:
    constraints: []
  reference_trajectories: []
  pipeline_id: ''
  planner_id: ''
  group_name: ''
  num_planning_attempts: 0
  allowed_planning_time: 0.0
  max_velocity_scaling_factor: 0.0
  max_acceleration_scaling_factor: 0.0
  cartesian_speed_end_effector_link: ''
  max_cartesian_speed: 0.0
planning_options:
  planning_scene_diff:
    name: ''
    robot_state:
      joint_state:
        header:
          stamp:
            sec: 0
            nanosec: 0
          frame_id: ''
        name: []
        position: []
        velocity: []
        effort: []
      multi_dof_joint_state:
        header:
          stamp:
            sec: 0
            nanosec: 0
          frame_id: ''
        joint_names: []
        transforms: []
        twist: []
        wrench: []
      attached_collision_objects: []
      is_diff: false
    robot_model_name: ''
    fixed_frame_transforms: []
    allowed_collision_matrix:
      entry_names: []
      entry_values: []
      default_entry_names: []
      default_entry_values: []
    link_padding: []
    link_scale: []
    object_colors: []
    world:
      collision_objects: []
      octomap:
        header:
          stamp:
            sec: 0
            nanosec: 0
          frame_id: ''
        origin:
          position:
            x: 0.0
            y: 0.0
            z: 0.0
          orientation:
            x: 0.0
            y: 0.0
            z: 0.0
            w: 1.0
        octomap:
          header:
            stamp:
              sec: 0
              nanosec: 0
            frame_id: ''
          binary: false
          id: ''
          resolution: 0.0
          data: []
    is_diff: false
  plan_only: false
  look_around: false
  look_around_attempts: 0
  max_safe_execution_cost: 0.0
  replan: false
  replan_attempts: 0
  replan_delay: 0.0
